body {
    /* background-color: white; */
    text-align: center;
}

/* The element selector selects HTML elements based on the element name. */
/* The id of an element is unique within a page, so the id selector is used to select one unique element */
/* #para1{
    text-align: center;
    color: red;
} */
/* The class selector selects HTML elements with a specific class attribute.
To select elements with a specific class, write a period (.) character, followed by the class name. */
p.center {
    text-align: center;
    color: blue;
}

/* The universal selector (*) selects all HTML elements on the page. */
/* *{
    background-color: aquamarine;
    text-align: left;
    color: black;
} */
/* Descendant Selector
The descendant selector matches all elements that are descendants of a specified element.
The following example selects all <p> elements inside <div> elements:  */
div p {
    background-color: yellow;
    text-align: right;
    display: block;
    padding: 20px;
    color: black;
}

/* Child Selector (>)
The child selector selects all elements that are the children of a specified element.
The following example selects all <p> elements that are children of a <div> element: */
/* div > p{
    background-color: yellowgreen;
    text-align: right;
    color: black;
} */
/* Adjacent Sibling Selector (+)
The adjacent sibling selector is used to select an element that is directly after another specific element. */
/* div + p{
    background-color: lightcoral;
    text-align: right;
    color: black;
} */
/* General Sibling Selector (~)
The general sibling selector selects all elements that are next siblings of a specified element.
The following example selects all <p> elements that are next siblings of <div> elements:  */
/* div ~ p{
    background-color: lightgreen;
    text-align: center;
    color: black;
} */
/* p,h2{
    color: white;
    text-align: center;
} */

/* A pseudo-class is used to define a special state of an element.

For example, it can be used to:

Style an element when a user mouses over it
Style visited and unvisited links differently
Style an element when it gets focus */
selector:pseudo-class {
    property: value;
}

/* Anchor Pseudo-classes
Links can be displayed in different ways: */
/* unvisited link */
a:link {
    color: #FF0000;
}

/* visited link */
a:visited {
    color: #00FF00;
}

/* mouse over link */
/* a:hover {
    color: #FF00FF;
  } */

/* selected link */
a:active {
    color: #0000FF;
}

/* Pseudo-classes can be combined with HTML classes: */
a.highlight:hover {
    color: #ff0000;
}

div:hover {
    /* display: none; */
    background-color: yellow;
}

div:hover p {
    display: block;
}

/* The :first-child pseudo-class matches a specified element that is the first child of another element.   */
/* p:first-child {
    color: gray;
  } */
/* p i:first-child {
    color: black;
  } */
p:first-child i {
    color: black;
}

q:lang(no) {
    quotes: "~" "~";
}

/* The ::first-line pseudo-element is used to add a special style to the first line of a text.
  The following example formats the first line of the text in all <p> elements: */
p::first-line {
    color: #880505;
    font-variant: small-caps;
}

/* The ::first-letter pseudo-element is used to add a special style to the first letter of a text.
  The following example formats the first letter of the text in all <p> elements:  */
p::first-letter {
    color: #ff0000;
    font-size: xx-large;
}

p.intro::first-letter {
    color: #ff0000;
    font-size: 200%;
}

/* The ::before pseudo-element can be used to insert some content before the content of an element.
  The following example inserts an image before the content of each <h1> element: */
h2::before {
    content: url(/images/background_3.jpeg);
}

/* The ::after pseudo-element can be used to insert some content after the content of an element.
   The following example inserts an image after the content of each <h1> element: */
h2::before {
    content: url(/images/background_3.jpeg);
}
/* The ::marker pseudo-element selects the markers of list items.
The following example styles the markers of list items: */
::marker{
    color: #880505;
    font-size: 35px;
}
/* The ::selection pseudo-element matches the portion of an element that is selected by a user.
The following CSS properties can be applied to ::selection: color, background, cursor, and outline. */
::selection{
    color: red;
    background: yellow;
}